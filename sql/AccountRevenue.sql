/*
You are given three tables
  a) Account which contains Account id
  b) Date That contains dateid
  c) Sales Fact with three columns date, Account Id and revenue.
     This fact records the revenue generated by an account every day if they spend.
     If there is no spend then there won't be a record in the fact table .

Given this scenario write an SQL that generates a list of all Accounts
on every day in the last one Month that had no spent.
*/

SELECT DISTINCT a.account_id
FROM
  (
    SELECT
      a.id AS account_id,
      d.id as date_id
    FROM
      accounts a
      CROSS JOIN
      dates d
    WHERE d.ds BETWEEN '<DATEID-29>' AND '<DATEID>'
  ) a
  LEFT OUTER JOIN
  sales_fact b ON a.account_id = b.account_id AND a.date_id = b.date_id
WHERE b.account_id IS NULL

/*
The Question above requires a cross join with Accounts and Dates and lead to
a large table if your account dimension is big. How could you optimize this from
a design perspective? => Answer could be datelist, bitmap integer etc.
*/

-- Keep track of accounts' date list and last spend date at the end of each day
-- then we can generate list of accounts that spend in any given time range by a UDF or Hive transformer.
